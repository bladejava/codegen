package ${table.packageName}.service.impl;

import java.util.List;

import com.blade.jdbc.AR;
import com.blade.jdbc.Page;
import com.blade.jdbc.QueryParam;

import com.blade.ioc.annotation.Service;
import ${table.packageName}.model.${table.className};
import ${table.packageName}.service.${table.className}Service;

@Service
public class ${table.className}ServiceImpl implements ${table.className}Service {
	
	@Override
	public ${table.className} get${table.className}(${table.getFirstPrimaryKey().fieldType} ${table.getFirstPrimaryKey().fieldName}) {
		return AR.findById(${table.className}.class, ${table.getFirstPrimaryKey().fieldName});
	}
	
	@Override
	public ${table.className} get${table.className}(QueryParam where) {
		if(null != where){
			return AR.find(where).first(${table.className}.class);
		}
		return null;
	}
	
	@Override
	public List<${table.className}> get${table.className}List(QueryParam where) {
		if(null != where){
			return AR.find(where).list(${table.className}.class);
		}
		return null;
	}
	
	@Override
	public Page<${table.className}> getPageList(QueryParam where) {
		Page<${table.className}> page${table.className} = AR.find(where).page(${table.className}.class);
		return page${table.className};
	}
	
	@Override
	public boolean save(#foreach($tempColumn in $table.columnList)#if(${tempColumn.fieldName}!=${table.getFirstPrimaryKey().fieldName})${tempColumn.fieldType} ${tempColumn.fieldName}#if($velocityCount!=$table.columnList.size()),#end#end #end) {
		return false;
	}
	
	@Override
	public boolean delete(${table.getFirstPrimaryKey().fieldType} ${table.getFirstPrimaryKey().fieldName}) {
		if(null != ${table.getFirstPrimaryKey().fieldName}){
			AR.update("delete from ").executeUpdate();
			return true;
		}
		return false;
	}
		
}
